# ENVIRONMENT FILE
# This file contains the environment variables for the whole project.
# Not all variables are required, some of them are not related to application
# configuration, but to the environment itself, like the timezone or the host
# and port where the application will be running. There are also
# container-specific variables that are used to configure application and as
# well docker-compose files for development and production environments.
#
# It's recommended to symlink the real .env file into the root of the project.
# ln -s ./../../.env ./apps/server/.env
# ln -s ./../.env ./deploy/.env

# --------------------------------
# Environment Configuration
# --------------------------------

TZ=UTC
HOST=localhost
PORT=1337
PROTOCOL=http
PROJECT=plygrnd

# --------------------------------
# Node.js Environment Configuration
# --------------------------------

NODE_ENV=testing
NODE_OPTIONS="--enable-source-maps --max-old-space-size=6000 --max-semi-space-size=512 --v8-pool-size=8 --zero-fill-buffers"
UV_THREADPOOL_SIZE=16

# --------------------------------
# @plygrnd/server
# --------------------------------

SERVER_CONTAINER_NAME="PLYGRNDS"

${SERVER_CONTAINER_NAME}_NODE_ENV="development"
${SERVER_CONTAINER_NAME}_TZ=${TZ}
${SERVER_CONTAINER_NAME}_HOST=${HOST}
${SERVER_CONTAINER_NAME}_PORT=1337
${SERVER_CONTAINER_NAME}_PROTOCOL=${PROTOCOL}
${SERVER_CONTAINER_NAME}_SERVICE_NAME="plygrnds"
${SERVER_CONTAINER_NAME}_SERVICE_DESCRIPTION="Plygrnds is a playground for developers to test their code."

# --------------------------------
# OpenTelemetry Configuration
# --------------------------------

OTEL_NODE_RESOURCE_DETECTORS=env,host,os,process
OTEL_NODE_TRACES_EXPORTER=otlp
OTEL_NODE_METRICS_EXPORTER=none
OTEL_NODE_LOGS_EXPORTER=none
OTEL_PROPAGATORS=tracecontext,baggage

# --------------------------------
# Logging Configuration
# --------------------------------

LOG_LEVEL=silly
LOG_FORMAT=text

# --------------------------------
# Redis Configuration
# --------------------------------

REDIS_PROTOCOL=redis
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_USERNAME=
REDIS_PASSWORD=
REDIS_DB=0
REDIS_SSL=false
REDIS_URI=${REDIS_PROTOCOL}://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# --------------------------------
# Database Configuration
# --------------------------------

DATABASE_PROTOCOL=postgres
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=keinsell
DATABASE_PASSWORD=keinsell
DATABASE_ROOT_PASSWORD=keinsell
DATABASE_NAME=${SERVICE_NAME}
DATABASE_URI=${DATABASE_PROTOCOL}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}

# --------------------------------
# Sentry Configuration
# --------------------------------

SENTRY_DSN=https://e3e646bc883717ea3273e9c03303863d@sentry.keinsell.com/2
SENTRY_PROFILER_LOGGING_MODE=lazy

# --------------------------------
# OAuth 2.0 Clients Configuration
# --------------------------------

OAUTH_CLIENT_GITHUB_CLIENT_ID="f2c6*****************"
OAUTH_CLIENT_GITHUB_SECRET="f90**************************************"
OAUTH_CLIENT_GITHUB_USERINFO_ENDPOINT="https://api.github.com/user"
OAUTH_CLIENT_GITHUB_TOKEN_ENDPOINT="https://github.com/login/oauth/access_token"
OAUTH_CLIENT_GITHUB_AUTH_ENDPOINT="https://github.com/login/oauth/authorize"

# --------------------------------
# Melisearch Configuration
# --------------------------------

MEILI_MASTER_KEY="melisearch_master_key"
MEILI_NO_ANALYTICS=true
MEILI_ENV=development
MEILI_LOG_LEVEL=INFO
MEILI_PORT=7701
MEILI_HOST=localhost
