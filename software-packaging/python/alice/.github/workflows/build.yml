name: Build Alice

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pyinstaller

    - name: Build with PyInstaller (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: make ${{ matrix.platform }}

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        copy resources\specs\alice-windows.spec alice-windows.spec
        pyinstaller --clean alice-windows.spec
        mkdir -p dist\windows
        copy dist\alice.exe dist\windows\

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: alice-${{ matrix.platform }}
        path: dist/${{ matrix.platform }}
        retention-days: 30

  create-release:
    name: Create Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release archives
      run: |
        cd artifacts
        for platform in linux macos windows; do
          if [ -d "alice-$platform" ]; then
            cd "alice-$platform"
            if [ "$platform" = "windows" ]; then
              zip -r "../../alice-$platform.zip" .
            else
              tar -czvf "../../alice-$platform.tar.gz" .
            fi
            cd ..
          fi
        done

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          alice-linux.tar.gz
          alice-macos.tar.gz
          alice-windows.zip
        draft: false
        prerelease: false
