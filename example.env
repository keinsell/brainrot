# --------------------------------
# General Configration
# --------------------------------

# HOST stands for host on which application will be run
# It is recommended to use localhost for development
# and ip address or domain name for production.
HOST=${HOST:-"localhost"}

# PORT stands for port on which application will be run
# It is recommended to use 80 or 443 for production
# and 1337 for development and testing in case where
# port will be taken application will try to use any
# other port available.
PORT=1337

# PROTOCOL stands for describing prefered protocol for connection
# Some environments will apply it's own SSL over HTTP in some other
# cases there may be need to choose HTTPS and provide certificates.
# TODO: Variables for SSL certificates
# Possible values: http | https
PROTOCOL="http"

# NODE_ENV stands for environment in which application is run.
# Use "production" for everything above staging
# Use "staging" for staging environment (if you have one)
# Use "development" for local development and maybe staging
# Use "testing" to prepare aplication for local testing
NODE_ENV='development'

# SERVICE_NAME stands for name of the service
# It will be used for logging and tracing purposes
# It is recommended to use name of the project
SERVICE_NAME="shabu"

# --------------------------------
# Logging Configuration
# --------------------------------

# LOG_LEVEL stands for level of logging
# Possible values: error | warn | info | verbose | debug | silly
LOG_LEVEL="silly"

# LOG_FORMAT stands for format of logging
# Possible values: json | text
LOG_FORMAT="text"

# --------------------------------
# Loggin Transport Configuration
# --------------------------------

# LOG_TRANSPORT_CONSOLE_ENABLED stands for whether to use console transport
LOG_TRANSPORT_CONSOLE_ENABLED=true

# LOG_TRANSPORT_CONSOLE_LEVEL stands for level of logging for console transport
# Possible values: error | warn | info | verbose | debug | silly
LOG_TRANSPORT_CONSOLE_LEVEL="silly"

# LOG_TRANSPORT_CONSOLE_FORMAT stands for format of logging for console transport
# Possible values: json | text
LOG_TRANSPORT_CONSOLE_FORMAT="text"

# --------------------------------

# LOG_TRANSPORT_FILE_ENABLED stands for whether to use file transport
LOG_TRANSPORT_FILE_ENABLED=true

# LOG_TRANSPORT_FILE_LEVEL stands for level of logging for file transport
# Possible values: error | warn | info | verbose | debug | silly
LOG_TRANSPORT_FILE_LEVEL="silly"

# LOG_TRANSPORT_FILE_FORMAT stands for format of logging for file transport
# Possible values: json | text
LOG_TRANSPORT_FILE_FORMAT="text"

# LOG_TRANSPORT_FILE_FILENAME stands for filename of file transport
LOG_TRANSPORT_FILE_FILENAME="logs/${SERVICE_NAME}.log"

# --------------------------------

# LOG_TRANSPORT_HTTP_ENABLED stands for whether to use http transport
LOG_TRANSPORT_HTTP_ENABLED=false

# LOG_TRANSPORT_HTTP_LEVEL stands for level of logging for http transport
# Possible values: error | warn | info | verbose | debug | silly
LOG_TRANSPORT_HTTP_LEVEL="silly"

# LOG_TRANSPORT_HTTP_FORMAT stands for format of logging for http transport
# Possible values: json | text
LOG_TRANSPORT_HTTP_FORMAT="text"

# LOG_TRANSPORT_HTTP_URL stands for url of http transport
LOG_TRANSPORT_HTTP_URL=""

# --------------------------------

# LOG_TRANSPORT_FLUENTD_ENABLED stands for whether to use fluentd transport
LOG_TRANSPORT_FLUENTD_ENABLED=false

# LOG_TRANSPORT_FLUENTD_LEVEL stands for level of logging for fluentd transport
# Possible values: error | warn | info | verbose | debug | silly
LOG_TRANSPORT_FLUENTD_LEVEL="silly"

# LOG_TRANSPORT_FLUENTD_FORMAT stands for format of logging for fluentd transport
# Possible values: json | text
LOG_TRANSPORT_FLUENTD_FORMAT="text"

# LOG_TRANSPORT_FLUENTD_HOST stands for host of fluentd transport
LOG_TRANSPORT_FLUENTD_HOST=""

# LOG_TRANSPORT_FLUENTD_PORT stands for port of fluentd transport
LOG_TRANSPORT_FLUENTD_PORT=""

# LOG_TRANSPORT_FLUENTD_TIMEOUT stands for timeout of fluentd transport
LOG_TRANSPORT_FLUENTD_TIMEOUT=""

# LOG_TRANSPORT_FLUENTD_RECONNECT_INTERVAL stands for reconnect interval of fluentd transport
LOG_TRANSPORT_FLUENTD_RECONNECT_INTERVAL=""

# LOG_TRANSPORT_FLUENTD_MAX_BUFFER_SIZE stands for max buffer size of fluentd transport
LOG_TRANSPORT_FLUENTD_MAX_BUFFER_SIZE=""

# LOG_TRANSPORT_FLUENTD_SECURITY stands for security of fluentd transport
LOG_TRANSPORT_FLUENTD_SECURITY=""

# LOG_TRANSPORT_FLUENTD_TLS_OPTIONS stands for tls options of fluentd transport
LOG_TRANSPORT_FLUENTD_TLS_OPTIONS=""

# --------------------------------
# Redis Configuration
# --------------------------------
# Redis is used for caching and session storage
# There are two options for redis configuration
# 1. Use a URI
# 2. Use a host, port, and password
#
# !!! IMPORTANT !!!
# In case of using URI all other variables will be ignored
# it's recommended to replace URI from default one if you
# are not using provided docker-compose.
# --------------------------------

REDIS_URI=${REDIS_PROTOCOL}://${REDIS_HOST}:${REDIS_PORT}/${REDIS_DB}

# REDIS_PROTOCOL stands for protocol used to connect to redis
# it's used only for construction of REDIS_URI
REDIS_PROTOCOL="redis"

# REDIS_HOST stands for host on which redis is running
REDIS_HOST="localhost"

# REDIS_PORT stands for port on which redis is running
REDIS_PORT=6379

# REDIS_USERNAME stands for username used to connect to redis
REDIS_USERNAME=""

# REDIS_PASSWORD stands for password used to connect to redis
REDIS_PASSWORD=""

# REDIS_DB stands for database number used to connect to redis
REDIS_DB=0

# REDIS_SSL stands for whether to use SSL for redis connection
REDIS_SSL=false

# --------------------------------
# Database Configuration
# --------------------------------
# There are two options for database configuration
# 1. Use a URI
# 2. Use a host, port, username, password, and database name
#
# By default, the URI will be used. And eventually such URI
# will be decomposed inside of application. If you want to
# use host, port, username, password, and database name
# instead of URI, use default URI or change it.
#
# !!! IMPORTANT !!!
# In case of using URI all other variables will be ignored
# it's recommended to replace URI from default one if you
# are not using provided docker-compose.
# --------------------------------

# Database connection information
# This will be used to configure Prisma/TypeORM
# In case of using sqlite3 this will be used as a path to the database file
# Supported drivers: mysql, postgresql, sqlite3, mssql
DATABASE_URI=${DATABASE_DRIVER}://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}"

# Name of the database driver to use
# This will be used to configure Prisma/TypeORM
# Supported drivers: mysql, postgresql, sqlite3, mssql
DATABASE_PROVIDER="postgresql"

# DATABASE_PROTOCOL stands for protocol used to connect to database
# it's used only for construction of DATABASE_URI
DATABASE_PROTOCOL="postgres"

# DATABASE_HOST stands for host on which database is running
DATABASE_HOST="postgres.local"

# DATABASE_PORT stands for port on which database is running
DATABASE_PORT=80

# DATABASE_USERNAME stands for username used to connect to database
DATABASE_USERNAME="keinsell"

# DATABASE_PASSWORD stands for password used to connect to database
DATABASE_PASSWORD="keinsell"

# DATABASE_ROOT_PASSWORD stands for password used to connect
# to database as root user (only used for docker-compose)
DATABASE_ROOT_PASSWORD="keinsell"

# DATABASE_NAME stands for name of the database
DATABASE_NAME=${SERVICE_NAME}

# --------------------------------
# Sentry Configuration
# --------------------------------

SENTRY_DSN=""

