{
  "openapi": "3.0.0",
  "paths": {
    "/account": {
      "post": {
        "operationId": "register",
        "summary": "Register account",
        "description": "",
        "tags": [
          "account"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/forgot-password": {
      "post": {
        "operationId": "forgot-password",
        "summary": "",
        "description": "Sends a password reset email",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/reset-password": {
      "post": {
        "operationId": "reset-password",
        "summary": "",
        "description": "Resets the user's password",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/change-password": {
      "post": {
        "operationId": "change-password",
        "summary": "",
        "description": "Changes the user's password",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/change-email": {
      "post": {
        "operationId": "change-email",
        "summary": "",
        "description": "Changes the user's email",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/change-username": {
      "post": {
        "operationId": "change-username",
        "summary": "",
        "description": "Changes the user's username",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/delete-account": {
      "post": {
        "operationId": "delete-account",
        "summary": "",
        "description": "Deletes the user's account",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/verify-email": {
      "post": {
        "operationId": "verify-email",
        "summary": "",
        "description": "Verifies the userâ€™s email",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/resend-verification-email": {
      "post": {
        "operationId": "resend-verification-email",
        "summary": "",
        "description": "Resends the verification email",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "operationId": "authenticate",
        "summary": "",
        "description": "Logs the user in",
        "tags": [
          "account",
          "authentication"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auhenticate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully authenticated and session was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "404": {
            "description": "The user could not be found."
          }
        }
      },
      "get": {
        "operationId": "whoami",
        "summary": "",
        "description": "Returns the current user",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "logout",
        "summary": "",
        "description": "deletes the current session. This effectively logs out the user, and they must reauthenticate to continue using protected resources.",
        "tags": [
          "account",
          "session",
          "authentication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/authenticate/refresh-token": {
      "post": {
        "operationId": "refresh-token",
        "summary": "",
        "description": "Use a refresh token to extend a session and generate another access token",
        "tags": [
          "account",
          "authentication"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auhenticate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "methylophenidate",
    "description": "Methylophenidate is a boilerplate for Nest.js applications with batteries included.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "api",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "schemas": {
      "RegisterAccount": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The account's email address",
            "example": "Bryce_Ruecker@yahoo.com",
            "examples": [
              "Sebastian18@gmail.com",
              "Brice_Lockman9@yahoo.com",
              "Diana.Schiller@hotmail.com"
            ]
          },
          "password": {
            "type": "string",
            "description": "The account's password",
            "example": "AUSnohccy3QUCZm",
            "examples": [
              "jtiHYvc_Pnki92P",
              "9pMNquxaWWuReqw",
              "oh6qNbEP2QCXIxX"
            ]
          },
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Anabelle.Parisian60",
            "examples": [
              "Hayden.Fisher",
              "Desmond.Krajcik",
              "Amina61"
            ]
          }
        },
        "required": [
          "email",
          "password",
          "username"
        ]
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of authenticated account."
          },
          "mfa": {
            "type": "boolean",
            "description": "Indicates if account uses MFA. In case of true, additional steps are supposed to be made to activate access token."
          },
          "accessToken": {
            "type": "string",
            "description": "Access token."
          }
        },
        "required": [
          "id",
          "mfa",
          "accessToken"
        ]
      },
      "Auhenticate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Anabelle.Parisian60",
            "examples": [
              "Nicolette_Emmerich",
              "Alexandre.Krajcik",
              "Ruby_Ernser"
            ]
          },
          "password": {
            "type": "string",
            "description": "The account's password",
            "example": "AUSnohccy3QUCZm",
            "examples": [
              "8sCu09SwnJreNvn",
              "XZD13looDgl_l2N",
              "WPVKIP59g2s6_gK"
            ]
          }
        },
        "required": [
          "username",
          "password"
        ],
        "description": "asdasd"
      }
    }
  }
}