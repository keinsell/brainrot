name: Build Alice with PyOxidizer

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    name: Build with PyOxidizer on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: macos-latest
            platform: macos
          - os: windows-latest
            platform: windows

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install Rust (for PyOxidizer)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Install PyOxidizer
      run: cargo install pyoxidizer

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .

    - name: Build with PyOxidizer
      run: pyoxidizer build --release

    - name: Prepare artifacts directory (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        mkdir -p dist/${{ matrix.platform }}
        cp build/*/release/install/alice dist/${{ matrix.platform }}/

    - name: Prepare artifacts directory (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p dist\windows
        copy build\*\release\install\alice.exe dist\windows\

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: alice-pyoxidizer-${{ matrix.platform }}
        path: dist/${{ matrix.platform }}
        retention-days: 30

  create-release:
    name: Create PyOxidizer Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Create release archives
      run: |
        cd artifacts
        for platform in linux macos windows; do
          if [ -d "alice-pyoxidizer-$platform" ]; then
            cd "alice-pyoxidizer-$platform"
            if [ "$platform" = "windows" ]; then
              zip -r "../../alice-pyoxidizer-$platform.zip" .
            else
              tar -czvf "../../alice-pyoxidizer-$platform.tar.gz" .
            fi
            cd ..
          fi
        done

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          alice-pyoxidizer-linux.tar.gz
          alice-pyoxidizer-macos.tar.gz
          alice-pyoxidizer-windows.zip
        draft: false
        prerelease: false
