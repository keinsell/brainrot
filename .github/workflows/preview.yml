# Preview workflow is dedicated for spinning off a development environments on terraform, for example for every PR opened to main there will be real-world environment setted up on infrastructure which will be destroyed after merge.

name: üë®‚Äçüíª Preview

on:
  workflow_call:
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main

env:
  TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "dev-${{ github.repository_id }}-${{ github.event.pull_request.number }}"
  CONFIG_DIRECTORY: "./infrastructure/"

jobs:
  spinoff_preivew_environment:
    name: "spinoff-preview"
    runs-on: luminar-linux-x64-x1
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    steps:
      - name: üìú Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêß Setup OS
        uses: "./.github/actions/setup-os"

      - name: ‚ú≥Ô∏è Setup Node.js
        uses: "./.github/actions/setup-node"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: üì¶Setup Terraform Workspace
        shell: bash
        run: |
          cd infrastructure
          terraform init

      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.0
        id: upload-configuration
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          directory: ${{ env.CONFIG_DIRECTORY }}
          speculative: true

      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.0
        id: create-run
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version: ${{ steps.upload-configuration.outputs.configuration_version_id }}
          plan_only: true

      - name: Get Plan Output
        uses: hashicorp/tfc-workflows-github/actions/plan-output@v1.0.0
        id: plan-output
        with:
          plan: ${{ fromJSON(steps.plan-run.outputs.payload).data.relationships.plan.data.id }}