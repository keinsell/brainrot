name: Setup project

description: Sets up the project, installs dependencies, and links submodules

inputs:
  cypress_version:
    description: 'The version of cypress to install'
    required: false
    default: ''
  slim:
    description: 'Should only install dependencies and checkout code'
    required: false
    default: 'false'
  submodules:
    description: 'Should link submodules'
    required: false
    default: 'false'

outputs:
  cypress_cache_hit:
    description: 'Did cypress use binary cache'
    value: ${{ inputs.cypress_version != '' && steps.cache-cypress-binary-version.outputs.cache-hit || steps.cache-cypress-binary.outputs.cache-hit}}

runs:
  using: composite
  steps:
    - name: Cache Cypress Binary For Version
      id: cache-cypress-binary-version
      if: ${{ inputs.cypress_version != '' }}
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/Cypress/${{ inputs.cypress_version }}
        key: cypress-binary-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ inputs.cypress_version }}

    - name: Cache Cypress Binary
      id: cache-cypress-binary
      if: ${{ inputs.cypress_version == '' }}
      uses: actions/cache@v3
      with:
        path: /home/runner/.cache/Cypress
        key: cypress-binary-${{ hashFiles('**/pnpm-lock.yaml') }}

    - name: Cache pnpm Modules
      uses: actions/cache@v3
      with:
        path: ~/.pnpm-store
        key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-

    - name: ðŸ›Ÿ Install dependencies
      shell: bash
      run: pnpm install --frozen-lockfile

    - name: ðŸ›Ÿ Install submodules dependencies
      shell: bash
      if: ${{ inputs.submodules == 'true' }}
      run: cd enterprise && pnpm install --frozen-lockfile

    - name: Link submodules
      shell: bash
      if: ${{ inputs.submodules == 'true' }}
      run: pnpm link:submodules

    - name: Install wait-on plugin
      shell: bash
      run: pnpm i -g wait-on
