name: Deploy Development APIs

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    branches:
      - next
      - main
      - 121-add-manual-deployment-of-docker-image-to-koyeb
#    paths:
#      - 'package.json'
#      - 'yarn.lock'
#      - 'apps/server/**'
#      - 'packages/**'
#      - 'libs/shared/**'

env:
  TF_WORKSPACE: keinsell-dev
  CONFIGU_ORG: ${{ secrets.CONFIGU_ORG }}
  CONFIGU_SECRET: ${{ secrets.CONFIGU_SECRET }}
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  deploy_dev_api:
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    runs-on: methylphenidate-runner-set
    timeout-minutes: 80
    #    environment: Development
    permissions:
      contents: read
      packages: write
      deployments: write
      id-token: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup OS
        uses: "./.github/actions/setup-os"

      - name: ‚ú≥Ô∏è Setup Node.js
        uses: "./.github/actions/setup-node"

      - name: üê≥ Setup Docker
        uses: "./.github/actions/setup-docker"
        with:
          docker_username: ${{ env.DOCKER_USERNAME }}
          docker_password: ${{ env.DOCKER_TOKEN }}

      - name: üê≥ Publish Docker Image
        uses: docker/build-push-action@v5
        with:
          context: apps/server
          file: apps/server/build/Dockerfile
          push: true
          tags: |
            keinsell/methylphenidate-server:${{ github.sha }}
            ${{ github.event_name != 'pull_request' && 'keinsell/methylphenidate-server:dev' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/install-koyeb-cli@v2
        with:
          api_token: "${{ secrets.KOYEB_TOKEN }}"
          github_token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Build and deploy the application
        shell: bash
        run: koyeb services redeploy -a methylphenidate picked-swan

      - name: Check service health
        run: |
            end=$((SECONDS+180))
            attempts=0
            max_attempts=20
            DEPLOYMENT_ID=$(koyeb services describe -a methylphenidate picked-swan -o json | jq -r '.latest_deployment_id | select(.!=null)')
            koyeb deployments logs $DEPLOYMENT_ID &
            while [ $SECONDS -lt $end ] && [ $attempts -lt $max_attempts ]; do
              SERVICE_STATUS=$(koyeb services describe -a methylphenidate 
          picked-swan -o json | jq -r '.status | select(.!=null)')
              if [ "$SERVICE_STATUS" = "HEALTHY" ]; then
                echo "Service is healthy."
                exit 0
              fi
              echo $SERVICE_STATUS
              echo "Service is not healthy. Waiting 10 seconds before retrying."
              sleep 10
              attempts=$((attempts+1))
            done
            echo "Service did not become healthy within the expected time or maximum attempts reached. Aborting redeployment."
            exit 1