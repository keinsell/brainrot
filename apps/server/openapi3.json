{
  "openapi": "3.0.0",
  "paths": {
    "/health": {
      "get": {
        "operationId": "healthcheck",
        "summary": "Health check endpoint",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The Health Check is successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {},
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "The Health Check is not successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "error"
                    },
                    "info": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "nullable": true
                    },
                    "error": {
                      "type": "object",
                      "example": {
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      },
                      "nullable": true
                    },
                    "details": {
                      "type": "object",
                      "example": {
                        "database": {
                          "status": "up"
                        },
                        "redis": {
                          "status": "down",
                          "message": "Could not connect"
                        }
                      },
                      "additionalProperties": {
                        "type": "object",
                        "required": [
                          "status"
                        ],
                        "properties": {
                          "status": {
                            "type": "string"
                          }
                        },
                        "additionalProperties": {
                          "type": "object"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/account": {
      "post": {
        "operationId": "register",
        "summary": "Register account",
        "description": "",
        "tags": [
          "account"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterAccountCommand"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account was successfully registered in system.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "400": {
            "description": "Provided Invalid Data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProblem",
                  "type": "object",
                  "example": {
                    "type": "com.methylphenidate.account.invalid-username",
                    "title": "Invalid Username",
                    "status": 400
                  },
                  "examples": [
                    {
                      "type": "com.methylphenidate.account.invalid-email",
                      "title": "Invalid Email",
                      "status": 400
                    }
                  ]
                }
              }
            }
          },
          "409": {
            "description": "Account already exists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProblem"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "update-account",
        "summary": "",
        "description": "Update details of account.",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/account/delete-account": {
      "post": {
        "operationId": "delete-account",
        "summary": "",
        "description": "Deletes the user's account.",
        "tags": [
          "account"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/recovery/forgot-password": {
      "post": {
        "operationId": "forgot-password",
        "summary": "Request password reset",
        "description": "Sends a password reset email",
        "tags": [
          "account-recovery"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecoverAccount"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/recovery/reset-password": {
      "post": {
        "operationId": "reset-password",
        "summary": "Reset password",
        "description": "Resets the user's password",
        "tags": [
          "account-recovery"
        ],
        "parameters": [
          {
            "name": "code",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/verification/verify-email": {
      "post": {
        "operationId": "verify-email",
        "summary": "Verify Email",
        "description": "Verifies the userâ€™s email",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "name": "verification_code",
            "required": true,
            "in": "query",
            "example": "verification_code",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/account/verification/resend-verification-email": {
      "post": {
        "operationId": "resend-verification-email",
        "summary": "Re-send verification email",
        "description": "Resends the verification email",
        "tags": [
          "account"
        ],
        "parameters": [
          {
            "name": "email",
            "required": true,
            "in": "query",
            "description": "Email of created account to which verification email should be sent",
            "example": "Polly.Kihn25@gmail.com",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/authenticate": {
      "post": {
        "operationId": "authenticate",
        "summary": "Basic Authentication",
        "description": "Logs the user in with usage of a username and password.",
        "tags": [
          "authentication"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Auhenticate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The user has been successfully authenticated and session was created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticationResponse"
                }
              }
            }
          },
          "404": {
            "description": "The user could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HttpProblem"
                }
              }
            }
          }
        },
        "security": [
          {
            "basic": []
          }
        ]
      },
      "get": {
        "operationId": "whoami",
        "summary": "Who am I?",
        "description": "Returns the current user",
        "tags": [
          "authentication"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Account was found in system, and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/session/refresh-session": {
      "post": {
        "operationId": "refresh-session",
        "summary": "",
        "description": "Use a refresh token to extend a session and generate another access token",
        "tags": [
          "session"
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshSession"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/product": {
      "post": {
        "operationId": "create-product",
        "summary": "Create product",
        "tags": [
          "product"
        ],
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "list-products",
        "summary": "List products",
        "tags": [
          "product"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/product/{id}": {
      "get": {
        "operationId": "get-product",
        "summary": "Get product",
        "tags": [
          "product"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "patch": {
        "operationId": "ProductController_updateProduct",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "ProductController_deleteProduct",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/cart/{id}": {
      "get": {
        "operationId": "get-cart",
        "summary": "Get a Cart",
        "description": "Retrieve a Cart's details. This includes recalculating its totals.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "CartController_updateCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "CartController_deleteCart",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/cart/{id}/checkout": {
      "post": {
        "operationId": "CartController_checkoutCart",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "CartController_cancelCheckoutCart",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/region/{id}": {
      "get": {
        "operationId": "get-region",
        "summary": "Get a Region",
        "description": "Retrieve a Region's details.",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  },
  "info": {
    "title": "methylophenidate",
    "description": "Methylophenidate is a boilerplate for Nest.js applications with batteries included.",
    "version": "1.0",
    "contact": {}
  },
  "tags": [
    {
      "name": "api",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "name": "Bearer Token",
        "type": "http",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer <token>\""
      }
    },
    "schemas": {
      "RegisterAccountCommand": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "The account's email address",
            "example": "Polly.Kihn25@gmail.com",
            "examples": [
              "Raul_Marks@gmail.com",
              "Buddy.Schulist@gmail.com",
              "Anibal_Pouros@hotmail.com"
            ]
          },
          "password": {
            "type": "string",
            "description": "The account's username",
            "example": "SuperSecretPassword123!",
            "examples": [
              "LaW1KVuo69FG5Pf",
              "9srQfkporSDhU76",
              "74ETrfy3OQCdUzs"
            ]
          },
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Maudie_Rath12",
            "examples": [
              "Adeline_Marquardt17",
              "Hadley24",
              "Maud.Ankunding"
            ]
          }
        },
        "required": [
          "email",
          "password",
          "username"
        ]
      },
      "HttpProblem": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "A URI reference that uniquely identifies the problem type only in the context of the provided API. Opposed to the specification in RFC-7807, it is neither recommended to be dereferencable and point to a human-readable documentation nor globally unique for the problem type.",
            "example": "com.methylphenidate.account.already-exists"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type.",
            "example": "Account Already Exists"
          },
          "status": {
            "type": "number",
            "minimum": 100,
            "maximum": 599,
            "enum": [
              100,
              101,
              200,
              201,
              202,
              203,
              204,
              205,
              206,
              300,
              301,
              302,
              303,
              304,
              305,
              307,
              400
            ],
            "description": "cyz",
            "example": 400
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
            "example": "https://jakubolan.eu.auth0.com/oauth/token"
          }
        },
        "required": [
          "type",
          "title",
          "status",
          "instance"
        ]
      },
      "RecoverAccount": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Maudie_Rath12",
            "examples": [
              "Adeline_Marquardt17",
              "Hadley24",
              "Maud.Ankunding"
            ]
          },
          "method": {
            "type": "string",
            "description": "Recovery Method",
            "example": ""
          }
        },
        "required": [
          "username"
        ]
      },
      "AuthenticationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier of given resource."
          },
          "mfa": {
            "type": "boolean",
            "description": "Indicates if domain uses MFA. In case of true, additional steps are supposed to be made to activate access token."
          },
          "accessToken": {
            "type": "string",
            "description": "Access token."
          },
          "refreshToken": {
            "type": "string",
            "description": "...",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
            "examples": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ"
            ]
          }
        },
        "required": [
          "id",
          "mfa",
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshSession": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "...",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
            "examples": [
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ",
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJwYXlsb2FkIjp7fSwiaWF0IjoxNzA3NzMxMDExfQ.rjplMlGT9I-q3IRsKR8GoW53riJRePCTS4GP7bRAPzQ"
            ]
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "Account": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The domain's unique identifier",
            "example": "cjld2cjxh0000qzrmn831i7rn"
          },
          "email": {
            "type": "string",
            "description": "The domain's email address",
            "example": "Polly.Kihn25@gmail.com",
            "examples": [
              "Raul_Marks@gmail.com",
              "Buddy.Schulist@gmail.com",
              "Anibal_Pouros@hotmail.com"
            ]
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Indicates whether the email associated with a user domain has been verified",
            "example": false
          },
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Maudie_Rath12",
            "examples": [
              "Adeline_Marquardt17",
              "Hadley24",
              "Maud.Ankunding"
            ]
          }
        },
        "required": [
          "id",
          "email",
          "emailVerified",
          "username"
        ],
        "description": "asdasd"
      },
      "Auhenticate": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The account's username",
            "example": "Maudie_Rath12",
            "examples": [
              "Adeline_Marquardt17",
              "Hadley24",
              "Maud.Ankunding"
            ]
          },
          "password": {
            "type": "string",
            "description": "The account's username",
            "example": "SuperSecretPassword123!",
            "examples": [
              "LaW1KVuo69FG5Pf",
              "9srQfkporSDhU76",
              "74ETrfy3OQCdUzs"
            ]
          }
        },
        "required": [
          "username",
          "password"
        ],
        "description": "asdasd"
      }
    }
  }
}
